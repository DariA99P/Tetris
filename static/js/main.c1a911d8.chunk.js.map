{"version":3,"sources":["Main/components/Auth/styled.ts","Main/components/Auth/index.tsx","Main/components/PlayPage/styled.ts","Main/components/enum.ts","Main/components/PlayPage/HeaderPage.tsx","Main/components/helpers.ts","Main/components/figures/rectangle.tsx","Main/components/PlayPage/Main.tsx","Main/components/PlayPage/index.tsx","Main/index.tsx","App.js","serviceWorker.js","index.js"],"names":["AuthPageStyled","styled","div","AuthFormWrapperStyled","TitleStyled","TextStyled","InputStyled","Input","ButtonStyled","Button","FormAuthComponent","React","localStorage","getItem","value","setValue","onChange","e","target","onClick","setItem","placeholder","to","pathname","type","TypeFigure","ButtonCode","TetrisPageStyled","HeaderComponentStyled","HomeFilledStyled","HomeFilled","MainComponentStyled","DivComponentStyled","PlayButtonStyled","HeaderPage","placement","title","colors","collide","area","player","matrix","pos","m","o","y","length","x","getFigure","T","O","L","J","I","S","rotateFigure","dir","forEach","row","reverse","randomInteger","min","max","rand","Math","random","abs","round","nextFigure","score","setCanvasSettings","canvas","document","getElementById","context","getContext","canvasNextFigure","contextNext","clearRect","width","height","scale","gameLoop","initialMatrix","w","h","push","Array","fill","makeMatrix","time","figureSettings","gameRun","drawMatrixByTypeFigure","offset","fillStyle","fillRect","updateScore","scoreField","innerText","runGame","floor","playerDrop","rowCount","cycle","splice","unshift","points","playerMove","draw","setStatePlayer","text","clearInterval","font","textAlign","textBaseline","fillText","addEventListener","keyCode","LEFT","UP","changeFigureRotate","RIGHT","onclick","setInterval","disabled","CanvasComponentStyled","useEffect","id","style","border","MainComponent","marginTop","TetrisPage","Content","Layout","minHeight","background","exact","path","component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","createElement","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c1a911d8.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport {Button, Input} from 'antd';\n\nexport const AuthPageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 750px;\n  align-items: center;\n`;\nexport const AuthFormWrapperStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 36px;\n  width: 300px;\n  margin-left: 16px;\n`;\n\nexport const TitleStyled = styled.div`\n  font-size: 36px;\n`;\n\nexport const TextStyled = styled.div`\n  margin-top: 16px;\n  font-size: 24px;\n`;\n\nexport const InputStyled = styled(Input)`\n  margin-top: 16px;\n  border-radius: 4px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  margin-top: 16px;\n  border-radius: 4px;\n`;","import * as React from \"react\";\nimport * as s from \"./styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const FormAuthComponent = () => {\n    const [value, setValue] = React.useState(\n        localStorage.getItem('userName') || ''\n    );\n\n    const onChange = React.useCallback(\n        e => setValue(e.target.value),\n        []\n    );\n    const onClick = React.useCallback(\n        () => localStorage.setItem('userName', value),\n        [value]\n    );\n    return (\n        <s.AuthPageStyled>\n            <s.AuthFormWrapperStyled>\n                <s.TitleStyled>Tetris</s.TitleStyled>\n                <s.TextStyled>Введите свое имя:</s.TextStyled>\n                <s.InputStyled\n                    value={value}\n                    onChange={onChange}\n                    placeholder=\"Введите имя\"\n                />\n                <Link to={{ pathname: '/tetris' }}>\n                    <s.ButtonStyled type=\"primary\" onClick={onClick}>\n                        Войти\n                    </s.ButtonStyled>\n                </Link>\n            </s.AuthFormWrapperStyled>\n        </s.AuthPageStyled>\n    )\n};","import styled from 'styled-components';\nimport { HomeFilled } from '@ant-design/icons';\nimport {Button} from \"antd\";\n\nexport const TetrisPageStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const HeaderComponentStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n`;\n\nexport const HomeFilledStyled = styled(HomeFilled)`\n  font-size: 24px;\n  cursor: pointer;\n`;\n\nexport const MainComponentStyled = styled.div`\n  display: flex;\n  margin: 0 auto;\n`;\n\nexport const DivComponentStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  align-items: center;\n`;\n\nexport const PlayButtonStyled = styled(Button)`\n  width: 200px;\n  margin-top: 16px;\n`;","export enum TypeFigure {\n    'T',\n    'O',\n    'L',\n    'J',\n    'I',\n    'S',\n    'Z',\n}\n\nexport enum ButtonCode {\n    LEFT = 37,\n    UP,\n    RIGHT,\n    DOWN,\n}","import React from \"react\";\nimport * as s from \"./styled\";\nimport {TitleStyled} from \"../Auth/styled\";\nimport {Tooltip} from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeaderPage: React.FC = () => (\n    <s.HeaderComponentStyled>\n        <div />\n        <TitleStyled>Tetris</TitleStyled>\n        <Tooltip placement=\"leftTop\" title=\"Home Page\">\n            <Link to={{ pathname: '/' }}>\n                <s.HomeFilledStyled />\n            </Link>\n        </Tooltip>\n    </s.HeaderComponentStyled>\n);","import {TypeFigure} from \"./enum\";\n\nexport const colors = [\n    null,\n    '#F4E334',\n    '#F47134',\n    '#34D7F4',\n    '#F434E5',\n    '#5B1E33',\n    '#A79BEC',\n    '#C90F39'\n];\n\nexport const collide=(area,player) => {\n    const [m,o]=[player.matrix,player.pos];\n    for(let y=0;y<m.length;++y){\n        for(let x=0;x<m[y].length;++x){\n            if(m[y][x]!==0&&(area[y+o.y]&&area[y+o.y][x+o.x])!==0){\n                return true;\n            }\n        }\n    }\n    return false;\n};\n\nexport const makeMatrix= (w,h) => {\n    const matrix=[];\n    while(h--){\n        // @ts-ignore\n        matrix.push(new Array(w).fill(0));\n    }\n    return matrix;\n};\n\nexport const getFigure = type => {\n    switch(type) {\n        case TypeFigure.T:\n            return [\n                [0,0,0],\n                [6,6,6],\n                [0,6,0]\n            ];\n        case TypeFigure.O:\n            return [\n                [2,2],\n                [2,2]\n            ];\n        case TypeFigure.L:\n            return [\n                [0,7,0],\n                [0,7,0],\n                [0,7,7]\n            ];\n        case TypeFigure.J:\n            return [\n                [0,4,0],\n                [0,4,0],\n                [4,4,0]\n            ];\n        case TypeFigure.I:\n            return [\n                [0,1,0,0],\n                [0,1,0,0],\n                [0,1,0,0],\n                [0,1,0,0]\n            ];\n        case TypeFigure.S:\n            return [\n                [0,3,3],\n                [3,3,0],\n                [0,0,0]\n            ];\n        default:\n            return [\n                [5,5,0],\n                [0,5,5],\n                [0,0,0]\n            ];\n    }\n};\n\nexport const rotateFigure = (matrix,dir) => {\n    for(let y=0;y<matrix.length;++y){\n        for(let x=0;x<y;++x){\n            [\n                matrix[x][y],\n                matrix[y][x]\n            ]=[\n                matrix[y][x],\n                matrix[x][y],\n            ]\n        }\n    }\n    if(dir>0){\n        matrix.forEach(row=>row.reverse());\n    }\n    else{\n        matrix.reverse();\n    }\n};\n","import React from \"react\";\nimport {collide, colors, getFigure, makeMatrix, rotateFigure} from \"../helpers\";\nimport {ButtonCode, TypeFigure} from \"../enum\";\n\nconst  SHIFT = 25;\nconst RECTANGLE_WIDTH = 150;\nconst RECTANGLE_HEIGHT = 50;\n\nconst SQUARE_WIDTH = 100;\nconst SQUARE_HEIGHT = 100;\n\nconst randomInteger = (min, max) => {\n    const rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.abs(Math.round(rand));\n};\n\nconst moveDown = (ctx, x, curY, width, height, arrayY: number[], arrayX: Array<number[]>) => {\n    let y = curY;\n    const isValid = arrayY\n        .filter(\n            value => y + SHIFT + height <= value ||\n                (\n                    !arrayX.find(valX => x + width > valX[0])\n                )\n        ).length;\n\n    if (isValid) {\n        ctx.clearRect(x,y,width,height);\n        y += SHIFT;\n        ctx.fillRect(x,y,width,height);\n    }\n    return y;\n};\n\nconst moveRight = (ctx, curX, y, width, height, maxX) => {\n    let x = curX;\n    if (x + SHIFT <= maxX) {\n        ctx.clearRect(x,y,width,height);\n        x += SHIFT;\n        ctx.fillRect(x,y,width,height);\n    }\n    return x;\n};\n\nconst moveLeft = (ctx, curX, y, width, height) => {\n    let x = curX;\n    if (x - SHIFT > 24) {\n        ctx.clearRect(x,y,width,height);\n        x -= SHIFT;\n        ctx.fillRect(x,y,width,height);\n    }\n    return x;\n};\n\n// const getCanvas = (\n//     play: boolean,\n//     pointsY: number[],\n//     pointsX: Array<number[]>,\n// ) => {\n//     const canvas = document.getElementById('canvasId');\n//     let ctx;\n//     let x = 25;\n//     let y = 20;\n//     let width = 0;\n//     let height = 0;\n//     let maxY = 720;\n//     let maxX = 0;\n//     let arrayY: number[] = pointsY;\n//     let arrayX: Array<number[]> = pointsX;\n//     console.log(arrayY);\n//     console.log(arrayX);\n//     // @ts-ignore\n//     if (canvas.getContext && play) {\n//         // @ts-ignore\n//         ctx = canvas.getContext(\"2d\");\n//         let numFigure = randomInteger(0, 1);\n//         switch (numFigure) {\n//             case 0: {\n//                 ctx.fillStyle = '#FEA04C';\n//                 width = RECTANGLE_WIDTH;\n//                 height = RECTANGLE_HEIGHT;\n//                 maxX = 275;\n//                 break;\n//             }\n//             default: {\n//                 ctx.fillStyle = '#F5E43D';\n//                 width = SQUARE_WIDTH;\n//                 height = SQUARE_HEIGHT;\n//                 maxX = 325;\n//                 break;\n//             }\n//         }\n//         ctx.fillRect(x,y,width,height);\n//         if (!arrayY.length) {\n//             arrayY = [...arrayY, maxY];\n//         }\n//         document.addEventListener('keydown', (event) => {\n//             const keyName = event.key;\n//             if (keyName === 'ArrowRight')\n//                 x = moveRight(ctx, x, y, width, height, maxX);\n//             if (keyName === 'ArrowLeft')\n//                 x = moveLeft(ctx, x, y, width, height);\n//             if (keyName === 'ArrowDown')\n//                 y = moveDown(ctx, x, y, width, height, arrayY, arrayX);\n//         });\n//\n//         const timer = setInterval(() => {\n//             y = moveDown(ctx, x, y, width, height, arrayY, arrayX);\n//             const saveY = y;\n//             if (arrayY.includes(y + height)) {\n//                 clearInterval(timer);\n//                 x = 25;\n//                 y = 20;\n//                 width = 0;\n//                 height = 0;\n//                 getCanvas(play, [...arrayY, saveY], [...arrayX, [x, x + width]]);\n//             }\n//         }, 500);\n//     }\n// };\n\nexport let nextFigure: TypeFigure = randomInteger(0, 6);\nlet score = 0;\nconst setCanvasSettings = () => {\n    const canvas = document.getElementById(\"canvasId\");\n    // @ts-ignore\n    const context = canvas.getContext(\"2d\");\n    // @ts-ignore\n    const canvasNextFigure = document.getElementById(\"nextFigureId\");\n    // @ts-ignore\n    const contextNext = canvasNextFigure.getContext(\"2d\");\n    // @ts-ignore\n    context.clearRect(0,0,canvas.width,canvas.height);\n    context.scale(20,20);\n    // @ts-ignore\n    contextNext.clearRect(0,0,canvasNextFigure.width,canvasNextFigure.height);\n    contextNext.scale(20,20);\n    const initialMatrix=makeMatrix(15,25);\n    let dropInter=100;\n    let time=0;\n    const figureSettings={\n        pos:{\n            x:0,\n            y:0\n        },\n        matrix:null,\n        score:0\n    };\n    const move=1;\n    let gameLoop;\n    let gameRun=false;\n    let points = () => {\n        let rowCount=1;\n        cycle:for(let y=initialMatrix.length-1;y>0;--y){\n            // @ts-ignore\n            for(let x=0;x<initialMatrix[y].length;++x){\n                if(initialMatrix[y][x]===0){\n                    continue cycle;\n                }\n            }\n            // @ts-ignore\n            const row=initialMatrix.splice(y,1)[0].fill(0);\n            // @ts-ignore\n            initialMatrix.unshift(row);\n            ++y;\n            figureSettings.score+=rowCount*100;\n            rowCount*=2;\n        }\n    }\n\n    const drawMatrixByTypeFigure = (matrix, offset, type = 'canvasId') => {\n        matrix.forEach((row, y) => {\n            row.forEach((value, x) => {\n                if (value !== 0 && type === 'canvasId') {\n                    context.fillStyle = colors[value];\n                    context.fillRect(x + offset.x, y + offset.y, 1, 1);\n                }\n                if (value !== 0 && type === 'nextCanvasId') {\n                    contextNext.fillStyle = colors[value];\n                    contextNext.fillRect(x + offset.x, y + offset.y, 1, 1);\n                }\n            });\n        });\n    }\n\n    const merge = (area,player) => {\n        player.matrix.forEach((row,y)=>{\n            row.forEach((value,x)=>{\n                if(value!==0){\n                    area[y+player.pos.y][x+player.pos.x]=value;\n                }\n            });\n        });\n    };\n    const updateScore = () => {\n        const scoreField = document.getElementById('resultId');\n        score = figureSettings.score;\n        // @ts-ignore\n        scoreField.innerText = `Счет: ${score}`;\n    };\n    const runGame = () => {\n        const type: TypeFigure = nextFigure;\n        nextFigure = randomInteger(0, 6);\n        // @ts-ignore\n        figureSettings.matrix=getFigure(type);\n        figureSettings.pos.y=0;\n        // @ts-ignore\n        figureSettings.pos.x=(Math.floor(initialMatrix[0].length/2))-(Math.floor(figureSettings.matrix[0].length/2));\n        if(collide(initialMatrix,figureSettings)){\n            // @ts-ignore\n            initialMatrix.forEach(row=> row.fill(0));\n            gameRun=false;\n        }\n    };\n    const playerDrop = () => {\n        figureSettings.pos.y++;\n        if(collide(initialMatrix,figureSettings)){\n            figureSettings.pos.y--;\n            merge(initialMatrix,figureSettings);\n            points();\n            runGame();\n            updateScore();\n        }\n    };\n    const playerMove = dir => {\n        figureSettings.pos.x+=dir;\n        if(collide(initialMatrix,figureSettings)){\n            figureSettings.pos.x-=dir;\n        }\n    };\n    const changeFigureRotate = dir => {\n        const pos=figureSettings.pos.x;\n        let offset=1;\n        rotateFigure(figureSettings.matrix,dir);\n        while(collide(initialMatrix,figureSettings)){\n            figureSettings.pos.x+=offset;\n            offset=-(offset+(offset>0?1:-1));\n            // @ts-ignore\n            if(offset>figureSettings.matrix[0].length){\n                rotateFigure(figureSettings.matrix,-dir);\n                figureSettings.pos.x=pos;\n                return;\n            }\n        }\n    };\n    const draw = () => {\n        context.fillStyle = '#fff';\n        contextNext.fillStyle = '#fff';\n        // @ts-ignore\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        // @ts-ignore\n        contextNext.fillRect(0, 0, canvasNextFigure.width, canvasNextFigure.height);\n        updateScore();\n        drawMatrixByTypeFigure(initialMatrix,{x:0,y:0});\n        drawMatrixByTypeFigure(figureSettings.matrix,figureSettings.pos);\n        drawMatrixByTypeFigure(getFigure(nextFigure),{x:3,y:3}, 'nextCanvasId');\n    };\n    const update = () => {\n        time++;\n        // figureSettings.score = 0;\n        if(time >= dropInter){\n            playerDrop();\n            time=0;\n        }\n        draw();\n    };\n    const setStatePlayer = text => {\n        clearInterval(gameLoop);\n        context.font=\"2px Comic Sans MS\";\n        context.fillStyle=\"#000000\";\n        context.textAlign=\"center\";\n        context.textBaseline=\"middle\";\n        // @ts-ignore\n        context.fillText(text,(canvas.width/20)/2,(canvas.width/20)/2);\n    };\n\n    setStatePlayer('Начните игру');\n    if (gameRun) {\n       runGame();\n       draw();\n   }\n    document.addEventListener('keydown',function(e){\n        switch (e.keyCode) {\n            case ButtonCode.LEFT: {\n                playerMove(-move);\n                break;\n            }\n            case ButtonCode.UP: {\n                changeFigureRotate(-move);\n                break;\n            }\n            case ButtonCode.RIGHT: {\n                playerMove(+move);\n                break;\n            }\n            default: {\n                if(gameRun){\n                    playerDrop();\n                }\n                break;\n            }\n        }\n    });\n    // @ts-ignore\n    document.getElementById(\"start\").onclick=function(){\n        gameRun=true;\n        runGame();\n        gameLoop=setInterval(() => {\n            if (gameRun){\n                update();\n                // @ts-ignore\n                this.disabled=true;\n            }\n            else {\n                setStatePlayer('Игра окончена');\n                // @ts-ignore\n                this.disabled=false;\n            }\n        },10);\n    };\n}\nexport const CanvasComponentStyled: React.FC = () => {\n    React.useEffect(() => {\n        setCanvasSettings();\n    }, [])\n    // document.addEventListener(\n    //     'DOMContentLoaded', setCanvasSettings,\n    // );\n    return <canvas id=\"canvasId\" width='300' height='500' style={{ border: '2px solid' }}/>\n};","import React from \"react\";\nimport {\n    DivComponentStyled,\n    MainComponentStyled,\n    PlayButtonStyled,\n} from \"./styled\";\nimport {CanvasComponentStyled} from \"../figures/rectangle\";\nimport {TextStyled} from \"../Auth/styled\";\n\nexport const MainComponent: React.FC = () => {\n  return (\n      <MainComponentStyled>\n          <DivComponentStyled>\n              <TextStyled>{`Игрок: ${localStorage.getItem('userName') || ''}`}</TextStyled>\n              <PlayButtonStyled id='start' type=\"primary\">\n                  Начать игру\n              </PlayButtonStyled>\n              <TextStyled>Следующая фигура</TextStyled>\n              <canvas id='nextFigureId' width='200' height='200' style={{border: '2px solid', marginTop: '8px'}}/>\n              <div style={{ marginTop: '16px' }} id='resultId'/>\n          </DivComponentStyled>\n          <DivComponentStyled>\n              <CanvasComponentStyled />\n          </DivComponentStyled>\n      </MainComponentStyled>\n  );\n};","import React from \"react\";\nimport * as s from './styled';\nimport { HeaderPage } from \"./HeaderPage\";\nimport { MainComponent } from \"./Main\";\n\nexport const TetrisPage: React.FC = () => (\n    <s.TetrisPageStyled>\n       <HeaderPage />\n       <MainComponent />\n    </s.TetrisPageStyled>\n);","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { FormAuthComponent } from \"./components/Auth\";\nimport Layout from \"antd/lib/layout\";\nimport { TetrisPage } from \"./components/PlayPage\";\n\nconst { Content } = Layout;\n\nexport const MainComponent: React.FC = () => (\n    <Router>\n        <Layout style={{ minHeight: '100vh' }}>\n            <Layout style={{ background: 'white' }}>\n                <Content>\n                    <Switch>\n                        <Route exact path=\"/tetris\" component={TetrisPage} />\n                        <Route exact path=\"/\" component={FormAuthComponent} />\n                    </Switch>\n                </Content>\n            </Layout>\n        </Layout>\n    </Router>\n);","import React from 'react';\nimport './App.css';\nimport { MainComponent } from \"./Main\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <MainComponent />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(React.createElement(App), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}